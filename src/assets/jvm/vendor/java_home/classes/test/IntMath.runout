Caught ArithmeticException as expected: / by zero
Caught ArithmeticException as expected: / by zero
5 + 3 = 8
5 - 3 = 2
5 * 3 = 15
5 / 3 = 1
5 % 3 = 2
5 << 3 = 40
5 >> 3 = 0
a++ = 6, b-- = 2
-5 + 3 = -2
-5 - 3 = -8
-5 * 3 = -15
-5 / 3 = -1
-5 % 3 = -2
-5 << 3 = -40
-5 >> 3 = -1
a++ = -4, b-- = 2
5 + -3 = 2
5 - -3 = 8
5 * -3 = -15
5 / -3 = -1
5 % -3 = 2
5 << -3 = -1610612736
5 >> -3 = 0
a++ = 6, b-- = -4
2147483647 + 2147483647 = -2
2147483647 - 2147483647 = 0
2147483647 * 2147483647 = 1
2147483647 / 2147483647 = 1
2147483647 % 2147483647 = 0
2147483647 << 2147483647 = -2147483648
2147483647 >> 2147483647 = 0
a++ = -2147483648, b-- = 2147483646
2147483647 + -2147483648 = -1
2147483647 - -2147483648 = -1
2147483647 * -2147483648 = -2147483648
2147483647 / -2147483648 = 0
2147483647 % -2147483648 = 2147483647
2147483647 << -2147483648 = 2147483647
2147483647 >> -2147483648 = 2147483647
a++ = -2147483648, b-- = 2147483647
-2147483648 + 2147483647 = -1
-2147483648 - 2147483647 = 1
-2147483648 * 2147483647 = -2147483648
-2147483648 / 2147483647 = -1
-2147483648 % 2147483647 = -1
-2147483648 << 2147483647 = 0
-2147483648 >> 2147483647 = -1
a++ = -2147483647, b-- = 2147483646
-2147483648 + -2147483648 = 0
-2147483648 - -2147483648 = 0
-2147483648 * -2147483648 = 0
-2147483648 / -2147483648 = 1
-2147483648 % -2147483648 = 0
-2147483648 << -2147483648 = -2147483648
-2147483648 >> -2147483648 = -2147483648
a++ = -2147483647, b-- = 2147483647
Extreme bytes:
127
-127
-128
Extreme ints:
2147483647
-2147483647
-2147483648
Extreme shorts:
32767
-32767
-32768
Character.digit(48, 10): 0
