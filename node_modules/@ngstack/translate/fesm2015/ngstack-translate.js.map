{"version":3,"file":"ngstack-translate.js.map","sources":["ng://@ngstack/translate/lib/translate.service.ts","ng://@ngstack/translate/lib/title.service.ts","ng://@ngstack/translate/lib/translate.pipe.ts","ng://@ngstack/translate/lib/translate.module.ts"],"sourcesContent":["import {\n  Injectable,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Optional\n} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateSettings } from './translate.settings';\n\nexport const TRANSLATE_SETTINGS = new InjectionToken<TranslateSettings>(\n  'TRANSLATE_SETTINGS'\n);\n\nexport interface TranslateParams {\n  [key: string]: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TranslateService {\n  protected data: { [key: string]: any } = {};\n  private _fallbackLang = 'en';\n  private _activeLang;\n  private _translationRoot = 'assets/i18n';\n\n  /**\n   * Raised each time active language gets changed.\n   */\n  activeLangChanged = new EventEmitter<{\n    previousValue: string;\n    currentValue: string;\n  }>();\n\n  /**\n   * Toggles debug mode.\n   *\n   * When in the debug mode, the service automatically prepends active language id to very translated result.\n   * That allows to verify that your components support i18n correctly and do not contain hard-coded text.\n   */\n  debugMode = false;\n\n  /**\n   * Disable caching and always download language files.\n   *\n   * Applies cache busting query parameters to urls, for example: '?v=1522426955882'.\n   */\n  disableCache = false;\n\n  /**\n   * List of supported languages.\n   *\n   * The service will attempt to load resource files only for given set of languages,\n   * and will automatically use fallback language for all unspecified values.\n   *\n   * By default this property is empty and service is going to probe all language files.\n   * Active and Fallback languages are always taken into account even if you do not specify them in the list.\n   */\n  supportedLangs: string[] = [];\n\n  /**\n   * List of extra paths to look for translation files.\n   *\n   * By default this property is empty.\n   * The value of `translationRoot` property is always taken into account.\n   */\n  translatePaths: string[] = [];\n\n  /**\n   * The fallback language to use when a resource string for the active language is not available.\n   */\n  get fallbackLang(): string {\n    return this._fallbackLang;\n  }\n\n  set fallbackLang(value: string) {\n    this._fallbackLang = value || 'en';\n  }\n\n  /**\n   * The language to use for the translations.\n   */\n  get activeLang(): string {\n    return this._activeLang;\n  }\n\n  set activeLang(value: string) {\n    const previousValue = this._activeLang;\n    const newValue = value || this.fallbackLang;\n    const changed = newValue !== previousValue;\n\n    if (changed) {\n      this._activeLang = newValue;\n      this.use(newValue).then(() => {\n        this.activeLangChanged.next({\n          previousValue: previousValue,\n          currentValue: newValue\n        });\n      });\n    }\n  }\n\n  getBrowserLanguage(): string {\n    const [lang /*, locale*/] = navigator.language\n      .replace('-', '_')\n      .toLowerCase()\n      .split('_');\n    return lang;\n  }\n\n  /**\n   * The root path to use when loading default translation files.\n   * Defaults to 'assets/i18n'.\n   */\n  get translationRoot(): string {\n    return this._translationRoot;\n  }\n\n  set translationRoot(value: string) {\n    this._translationRoot = value || 'assets/i18n';\n  }\n\n  constructor(\n    private http: HttpClient,\n    @Optional()\n    @Inject(TRANSLATE_SETTINGS)\n    settings: TranslateSettings\n  ) {\n    this.applySettings(settings);\n  }\n\n  protected applySettings(settings: TranslateSettings) {\n    const {\n      debugMode,\n      disableCache,\n      supportedLangs,\n      translatePaths,\n      translationRoot,\n      activeLang\n    } = this;\n\n    const defaults = {\n      debugMode,\n      disableCache,\n      supportedLangs,\n      translatePaths,\n      translationRoot,\n      activeLang,\n      ...settings\n    };\n\n    this.debugMode = defaults.debugMode;\n    this.disableCache = defaults.disableCache;\n    this.supportedLangs = defaults.supportedLangs;\n    this.translatePaths = defaults.translatePaths;\n    this.translationRoot = defaults.translationRoot;\n    this._activeLang = defaults.activeLang || this.getBrowserLanguage();\n  }\n\n  /**\n   * Get translated string\n   *\n   * @param key Translation key\n   * @param [params] Translation parameters\n   * @param [lang] Language to use for translation\n   * @returns Translated string\n   * @memberof TranslateService\n   */\n  get(key: string, params?: TranslateParams, lang?: string): string {\n    if (key) {\n      let value = this.getValue(lang || this.activeLang, key);\n      if (value === key) {\n        value = this.getValue(this.fallbackLang, key);\n      }\n      return this.format(value, params);\n    } else {\n      return null;\n    }\n  }\n\n  async load(): Promise<any> {\n    await this.use(this.fallbackLang);\n    return this.use(this.activeLang);\n  }\n\n  /**\n   * Load the translation file or use provided data for the given language.\n   *\n   * @param lang Language name\n   * @param [data] Translation data to use\n   * @returns Final translation data merged with existing translations\n   * @memberof TranslateService\n   */\n  async use(lang: string, data?: any): Promise<any> {\n    if (lang && data) {\n      return this.setTranslation(lang, data);\n    }\n\n    let translation = this.data[lang];\n    if (this.isNotSupported(lang)) {\n      translation = this.data[this.fallbackLang];\n    }\n\n    if (translation && Object.keys(translation).length > 0) {\n      return translation;\n    }\n\n    const fileName = `${lang || this.fallbackLang}.json`;\n    const filePaths = [this.translationRoot, ...(this.translatePaths || [])];\n\n    for (const path of filePaths) {\n      const filePath = `${path}/${fileName}`;\n      await this.loadTranslation(lang, filePath);\n    }\n\n    return this.data[lang] || {};\n  }\n\n  protected loadTranslation(lang: string, path: string): Promise<any> {\n    return new Promise<any>(resolve => {\n      if (this.disableCache) {\n        path += `?v=${Date.now()}`;\n      }\n\n      this.http.get<{}>(path).subscribe(\n        json => {\n          resolve(this.setTranslation(lang, json));\n        },\n        () => {\n          resolve(this.data[lang] || {});\n        }\n      );\n    });\n  }\n\n  protected isNotSupported(lang): boolean {\n    return (\n      lang !== this.fallbackLang &&\n      lang !== this.activeLang &&\n      (this.supportedLangs &&\n        this.supportedLangs.length > 0 &&\n        !this.supportedLangs.includes(lang))\n    );\n  }\n\n  protected getValue(lang: string, key: string): string {\n    let data = this.data[lang];\n    if (this.isNotSupported(lang)) {\n      data = this.data[this.fallbackLang];\n    }\n\n    if (!data) {\n      return key;\n    }\n\n    const keys = key.split('.');\n    let propKey = '';\n\n    do {\n      propKey += keys.shift();\n      const value = data[propKey];\n      if (value !== undefined && (typeof value === 'object' || !keys.length)) {\n        data = value;\n        propKey = '';\n      } else if (!keys.length) {\n        data = key;\n      } else {\n        propKey += '.';\n      }\n    } while (keys.length);\n\n    return data;\n  }\n\n  protected setTranslation(lang: string, data: any): any {\n    let finalResult = this.data[lang] || {};\n    finalResult = this.merge(finalResult, data || {});\n    this.data[lang] = finalResult;\n    return finalResult;\n  }\n\n  protected merge(...translations): any {\n    const result = {};\n\n    translations.forEach(translation => {\n      Object.keys(translation).forEach(key => {\n        if (key in result && Array.isArray(result[key])) {\n          result[key] = result[key].concat(translation[key]);\n        } else if (key in result && typeof result[key] === 'object') {\n          result[key] = this.merge(result[key], translation[key]);\n        } else {\n          result[key] = translation[key];\n        }\n      });\n    });\n\n    return result;\n  }\n\n  protected format(str: string, params: TranslateParams): string {\n    let result = str;\n\n    if (params) {\n      Object.keys(params).forEach(key => {\n        const value = params[key];\n        const template = new RegExp('{' + key + '}', 'gm');\n\n        result = result.replace(template, value);\n      });\n    }\n\n    if (this.debugMode) {\n      result = `[${this.activeLang}] ${result}`;\n    }\n\n    return result;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from './translate.service';\nimport { Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  private _titleKey = '';\n\n  changed = new Subject<{\n    previousValue: string;\n    currentValue: string;\n  }>();\n\n  constructor(private title: Title, private translate: TranslateService) {\n    translate.activeLangChanged.subscribe(() => this.onLanguageChanged());\n  }\n\n  getTitle(): string {\n    return this._titleKey;\n  }\n\n  setTitle(key: string): void {\n    const previousValue = this._titleKey;\n    const newValue = key || '';\n    const changed = newValue !== previousValue;\n\n    if (changed) {\n      this._titleKey = newValue;\n\n      const translated = this.translate.get(newValue);\n      this.title.setTitle(translated);\n\n      this.changed.next({\n        previousValue: previousValue,\n        currentValue: newValue\n      });\n    }\n  }\n\n  private onLanguageChanged() {\n    if (this._titleKey) {\n      const translated = this.translate.get(this._titleKey);\n      this.title.setTitle(translated);\n    }\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService, TranslateParams } from './translate.service';\n\n@Pipe({\n  name: 'translate',\n  pure: false\n})\nexport class TranslatePipe implements PipeTransform {\n  constructor(private translate: TranslateService) {}\n\n  transform(key: string, params?: TranslateParams): string {\n    return this.translate.get(key, params);\n  }\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { TranslateService, TRANSLATE_SETTINGS } from './translate.service';\nimport { TranslatePipe } from './translate.pipe';\nimport { TitleService } from './title.service';\nimport { TranslateSettings } from './translate.settings';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule],\n  declarations: [TranslatePipe],\n  exports: [TranslatePipe]\n})\nexport class TranslateModule {\n  static forRoot(settings?: TranslateSettings): ModuleWithProviders {\n    return {\n      ngModule: TranslateModule,\n      providers: [\n        { provide: TRANSLATE_SETTINGS, useValue: settings },\n        TranslateService,\n        TitleService\n      ]\n    };\n  }\n\n  static forChild(): ModuleWithProviders {\n    return {\n      ngModule: TranslateModule\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
