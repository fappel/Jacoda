{"version":3,"file":"ngx-ace-wrapper.umd.js","sources":["../src/lib/ace.interfaces.ts","../src/lib/ace.directive.ts","../src/lib/ace.component.ts","../src/lib/ace.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const ACE_CONFIG = new InjectionToken<AceConfigInterface>('ACE_CONFIG');\n\nexport type AceEditorEvent = 'blur' | 'focus' | 'copy' | 'paste' | 'change' | 'changeSession';\n\nexport type AceSelectionEvent = 'changeCursor' | 'changeSelection';\n\nexport const AceEditorEvents: AceEditorEvent[] = [\n  'blur',\n  'focus',\n\n  'copy',\n  'paste',\n\n  'change',\n  'changeSession'\n];\n\nexport const AceSelectionEvents: AceSelectionEvent[] = [\n  'changeCursor',\n  'changeSelection'\n];\n\nexport interface AceConfigInterface {\n  readOnly?: boolean,\n  cursorStyle?: 'ace' | 'slim' | 'smooth' | 'wide',\n  selectionStyle?: 'line' | 'text',\n  mergeUndoDeltas?: boolean | 'always',\n  behavioursEnabled?: boolean,\n  highlightActiveLine?: boolean,\n  highlightSelectedWord?: boolean,\n  wrapBehavioursEnabled?: boolean,\n  copyWithEmptySelection?: boolean,\n  navigateWithinSoftTabs?: boolean,\n  autoScrollEditorIntoView?: boolean,\n\n  mode?: string,\n  wrap?: boolean,\n  tabSize?: number,\n  overwrite?: boolean,\n  useWorker?: boolean,\n  foldStyle?: string,\n  newLineMode?: string,\n  useSoftTabs?: boolean,\n  firstLineNumber?: number,\n\n  theme?: string,\n  minLines?: number,\n  maxLines?: number,\n  fontSize?: number | string,\n  fontFamily?: string,\n  showGutter?: boolean,\n  printMargin?: number,\n  scrollPastEnd?: boolean,\n  animatedScroll?: boolean,\n  showInvisibles?: boolean,\n  fadeFoldWidgets?: boolean,\n  showFoldWidgets?: boolean,\n  showLineNumbers?: boolean,\n  showPrintMargin?: boolean,\n  fixedWidthGutter?: boolean,\n  printMarginColumn?: boolean,\n  displayIndentGuides?: boolean,\n  highlightGutterLine?: boolean,\n  hScrollBarAlwaysVisible?: boolean,\n  vScrollBarAlwaysVisible?: boolean,\n\n  dragDelay?: number,\n  dragEnabled?: boolean,\n  scrollSpeed?: number,\n  focusTimeout?: number,\n  tooltipFollowsMouse?: boolean\n}\n\nexport class AceConfig implements AceConfigInterface {\n  readOnly?: boolean;\n  cursorStyle?: 'ace' | 'slim' | 'smooth' | 'wide';\n  selectionStyle?: 'line' | 'text';\n  mergeUndoDeltas?: boolean | 'always';\n  behavioursEnabled?: boolean;\n  highlightActiveLine?: boolean;\n  highlightSelectedWord?: boolean;\n  wrapBehavioursEnabled?: boolean;\n  copyWithEmptySelection?: boolean;\n  navigateWithinSoftTabs?: boolean;\n  autoScrollEditorIntoView?: boolean;\n\n  mode?: string;\n  wrap?: boolean;\n  tabSize?: number;\n  overwrite?: boolean;\n  useWorker?: boolean;\n  foldStyle?: string;\n  newLineMode?: string;\n  useSoftTabs?: boolean;\n  firstLineNumber?: number;\n\n  theme?: string;\n  minLines?: number;\n  maxLines?: number;\n  fontSize?: number | string;\n  fontFamily?: string;\n  showGutter?: boolean;\n  printMargin?: number;\n  scrollPastEnd?: boolean;\n  animatedScroll?: boolean;\n  showInvisibles?: boolean;\n  fadeFoldWidgets?: boolean;\n  showLineNumbers?: boolean;\n  showFoldWidgets?: boolean;\n  showPrintMargin?: boolean;\n  fixedWidthGutter?: boolean;\n  printMarginColumn?: boolean;\n  displayIndentGuides?: boolean;\n  highlightGutterLine?: boolean;\n  hScrollBarAlwaysVisible?: boolean;\n  vScrollBarAlwaysVisible?: boolean;\n\n  dragDelay?: number;\n  dragEnabled?: boolean;\n  scrollSpeed?: number;\n  focusTimeout?: number;\n  tooltipFollowsMouse?: boolean;\n\n  constructor(config: AceConfigInterface = {}) {\n    this.assign(config);\n  }\n\n  assign(config: AceConfigInterface | any = {}, target?: any) {\n    target = target || this;\n\n    for (const key in config) {\n      if (config[key] && !Array.isArray(config[key]) && typeof config[key] === 'object') {\n        target[key] = {};\n\n        this.assign(config[key], target[key]);\n      } else {\n        target[key] = config[key];\n      }\n    }\n  }\n}\n","import * as ace from 'brace';\n\nimport { Directive, Optional, Inject,\n  OnInit, DoCheck, OnDestroy, OnChanges,\n  Input, Output, EventEmitter, NgZone, ElementRef,\n  KeyValueDiffer, KeyValueDiffers, SimpleChanges } from '@angular/core';\n\nimport { ACE_CONFIG, AceConfig, AceConfigInterface,\n  AceEditorEvent, AceEditorEvents, AceSelectionEvent, AceSelectionEvents } from './ace.interfaces';\n\n@Directive({\n  selector: '[ace]',\n  exportAs: 'ngxAce'\n})\nexport class AceDirective implements OnInit, DoCheck, OnDestroy, OnChanges {\n  private instance: ace.Editor | null = null;\n\n  private configDiff: KeyValueDiffer<string, any> | null = null;\n\n  @Input() disabled: boolean = false;\n\n  @Input('ace') config?: AceConfigInterface;\n\n  @Output() blur: EventEmitter<any> = new EventEmitter<any>();\n  @Output() focus: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() copy: EventEmitter<any> = new EventEmitter<any>();\n  @Output() paste: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() change: EventEmitter<any> = new EventEmitter<any>();\n\n  @Output() changeCursor: EventEmitter<any> = new EventEmitter<any>();\n  @Output() changeSession: EventEmitter<any> = new EventEmitter<any>();\n  @Output() changeSelection: EventEmitter<any> = new EventEmitter<any>();\n\n  constructor(private zone: NgZone,\n    private elementRef: ElementRef, private differs: KeyValueDiffers,\n    @Optional() @Inject(ACE_CONFIG) private defaults: AceConfigInterface) {}\n\n  ngOnInit(): void {\n    const params = new AceConfig(this.defaults);\n\n    params.assign(this.config); // Custom configuration\n\n    if (this.disabled) {\n      params.readOnly = true;\n\n      params.highlightActiveLine = false;\n    }\n\n    params.mode = 'ace/mode/' + (params.mode || 'text');\n    params.theme = 'ace/theme/' + (params.theme || 'github');\n\n    this.zone.runOutsideAngular(() => {\n      this.instance = ace.edit(this.elementRef.nativeElement);\n\n      this.instance.$blockScrolling = Infinity;\n\n      this.instance.setOptions(params);\n    });\n\n    // Add native Ace event handling\n    AceEditorEvents.forEach((eventName: AceEditorEvent) => {\n      if (this.instance) {\n        this.instance.on(eventName, (...args: any[]) => {\n          if (args.length === 1) {\n            args = args[0];\n          }\n\n          if (this[eventName]) {\n            this.zone.run(() => {\n              if (this[eventName].observers.length) {\n                this[eventName].emit(args);\n              }\n            });\n          }\n        });\n      }\n    });\n\n    // Add native Ace selection event handling\n    AceSelectionEvents.forEach((eventName: AceSelectionEvent) => {\n      if (this.instance) {\n        this.instance.selection.on(eventName, (...args: any[]) => {\n          if (args.length === 1) {\n            args = args[0];\n          }\n\n          if (this[eventName]) {\n            if (this[eventName].observers.length) {\n              this[eventName].emit(args);\n            }\n          }\n        });\n      }\n    });\n\n    if (!this.configDiff) {\n      this.configDiff = this.differs.find(this.config || {}).create();\n\n      this.configDiff.diff(this.config || {});\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this.configDiff) {\n      const changes = this.configDiff.diff(this.config || {});\n\n      if (changes) {\n        this.ngOnDestroy();\n\n        this.ngOnInit();\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.instance) {\n      if (this.instance.isFocused() as any as boolean) {\n        this.blur.emit();\n      }\n\n      delete this.instance;\n\n      this.instance = null;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes['disabled']) {\n      if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n        this.zone.runOutsideAngular(() => {\n          if (this.instance) {\n            const params = new AceConfig(this.defaults);\n\n            params.assign(this.config); // Custom configuration\n\n            this.instance.clearSelection();\n\n            const hlActive = (params.highlightActiveLine == null) ? true : false;\n\n            this.instance.setHighlightActiveLine(this.disabled ? false : hlActive);\n\n            this.instance.setReadOnly(this.disabled ? true : (params.readOnly ||Â false));\n          }\n        });\n      }\n    }\n  }\n\n  public ace(): ace.Editor | null {\n    return this.instance;\n  }\n\n  public clear(): void {\n    if (this.instance) {\n      this.instance.setValue('');\n\n      this.instance.clearSelection();\n    }\n  }\n\n  public getValue(): string | undefined {\n    if (this.instance) {\n      return this.instance.getValue();\n    }\n  }\n\n  public setValue(value: string, cursorPos?: -1 | 1): void {\n    if (this.instance) {\n      this.instance.setValue(value || '', cursorPos);\n    }\n  }\n}\n","import 'brace';\n\nimport 'brace/mode/text';\nimport 'brace/theme/github';\n\nimport { Component,\n  AfterViewInit, Input, Output, EventEmitter,\n  ViewChild, HostBinding, ViewEncapsulation } from '@angular/core';\n\nimport { AceDirective } from './ace.directive';\n\nimport { AceConfigInterface } from './ace.interfaces';\n\n@Component({\n  selector: 'ace',\n  exportAs: 'ngxAce',\n  templateUrl: '../../dist/lib/ace.component.html',\n  styleUrls: [ '../../dist/lib/ace.component.css' ],\n  encapsulation: ViewEncapsulation.None\n})\nexport class AceComponent implements AfterViewInit {\n  private content: string = '';\n\n  @Input()\n  get value(): string {\n    return this.content;\n  }\n  set value(value: string) {\n    this.setContent(value);\n  }\n\n  @Input() disabled: boolean = false;\n\n  @Input() mode: string = '';\n  @Input() theme: string = '';\n\n  @Input() config?: AceConfigInterface;\n\n  @HostBinding('class.ace')\n  @Input() useAceClass: boolean = true;\n\n  @Output() blur = new EventEmitter<any>();\n  @Output() focus = new EventEmitter<any>();\n\n  @Output() copy = new EventEmitter<any>();\n  @Output() paste = new EventEmitter<any>();\n\n  @Output() change = new EventEmitter<any>();\n\n  @Output() valueChange = new EventEmitter<string>();\n\n  @Output() changeCursor = new EventEmitter<any>();\n  @Output() changeSession = new EventEmitter<any>();\n  @Output() changeSelection = new EventEmitter<any>();\n\n  @ViewChild(AceDirective) directiveRef?: AceDirective;\n\n  constructor() {}\n\n  ngAfterViewInit(): void {\n    if (this.content != null) {\n      this.setContent(this.content, true);\n    }\n  }\n\n  private setContent(value: string, force?: boolean): void {\n    if (force || value !== this.content) {\n      if (this.directiveRef) {\n        this.directiveRef.setValue(value, 1);\n      }\n\n      this.content = value;\n    }\n  }\n\n  public getConfig(): AceConfigInterface {\n    this.config = this.config ||Â {};\n\n    this.config.mode = this.mode || this.config.mode;\n\n    this.config.theme = this.theme || this.config.theme;\n\n    return this.config;\n  }\n\n  public onContentChange(event: any): void {\n    if (this.directiveRef) {\n      this.change.emit(event);\n\n      this.content = this.directiveRef.getValue() || '';\n\n      this.valueChange.emit(this.value);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { AceComponent } from './ace.component';\nimport { AceDirective } from './ace.directive';\n\n@NgModule({\n  declarations: [ AceComponent, AceDirective ],\n  imports: [ CommonModule ],\n  exports: [ CommonModule, AceComponent, AceDirective ],\n  providers: []\n})\nexport class AceModule {\n}\n"],"names":["InjectionToken","EventEmitter","ace.edit","Directive","NgZone","ElementRef","KeyValueDiffers","Optional","Inject","Input","Output","Component","ViewEncapsulation","HostBinding","ViewChild","NgModule","CommonModule"],"mappings":";;;;;;;;;;IAAA;AAEA,QAAa,UAAU,GAAG,IAAIA,mBAAc,CAAqB,YAAY,CAAC;;IAM9E,IAAa,eAAe,GAAqB;QAC/C,MAAM;QACN,OAAO;QAEP,MAAM;QACN,OAAO;QAEP,QAAQ;QACR,eAAe;KAChB;;IAED,IAAa,kBAAkB,GAAwB;QACrD,cAAc;QACd,iBAAiB;KAClB;;QAuGC,mBAAY,MAA+B;YAA/B,uBAAA,EAAA,WAA+B;YACzC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACrB;;;;;;QAED,0BAAM;;;;;QAAN,UAAO,MAAqC,EAAE,MAAY;YAAnD,uBAAA,EAAA,WAAqC;YAC1C,MAAM,GAAG,MAAM,IAAI,IAAI,CAAC;YAExB,KAAK,IAAM,GAAG,IAAI,MAAM,EAAE;gBACxB,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,EAAE;oBACjF,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;oBAEjB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;iBACvC;qBAAM;oBACL,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;iBAC3B;aACF;SACF;QACH,gBAAC;KAAA;;;;;;AC9ID;QAmCE,sBAAoB,IAAY,EACtB,UAAsB,EAAU,OAAwB,EACxB,QAA4B;YAFlD,SAAI,GAAJ,IAAI,CAAQ;YACtB,eAAU,GAAV,UAAU,CAAY;YAAU,YAAO,GAAP,OAAO,CAAiB;YACxB,aAAQ,GAAR,QAAQ,CAAoB;YAtB9D,aAAQ,GAAsB,IAAI,CAAC;YAEnC,eAAU,GAAuC,IAAI,CAAC;YAErD,aAAQ,GAAY,KAAK,CAAC;YAIzB,SAAI,GAAsB,IAAIC,iBAAY,EAAO,CAAC;YAClD,UAAK,GAAsB,IAAIA,iBAAY,EAAO,CAAC;YAEnD,SAAI,GAAsB,IAAIA,iBAAY,EAAO,CAAC;YAClD,UAAK,GAAsB,IAAIA,iBAAY,EAAO,CAAC;YAEnD,WAAM,GAAsB,IAAIA,iBAAY,EAAO,CAAC;YAEpD,iBAAY,GAAsB,IAAIA,iBAAY,EAAO,CAAC;YAC1D,kBAAa,GAAsB,IAAIA,iBAAY,EAAO,CAAC;YAC3D,oBAAe,GAAsB,IAAIA,iBAAY,EAAO,CAAC;SAIG;;;;QAE1E,+BAAQ;;;QAAR;YAAA,iBA+DC;;gBA9DO,MAAM,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC;YAE3C,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAE3B,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;gBAEvB,MAAM,CAAC,mBAAmB,GAAG,KAAK,CAAC;aACpC;YAED,MAAM,CAAC,IAAI,GAAG,WAAW,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;YACpD,MAAM,CAAC,KAAK,GAAG,YAAY,IAAI,MAAM,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC;YAEzD,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;gBAC1B,KAAI,CAAC,QAAQ,GAAGC,UAAQ,CAAC,KAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;gBAExD,KAAI,CAAC,QAAQ,CAAC,eAAe,GAAG,QAAQ,CAAC;gBAEzC,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;aAClC,CAAC,CAAC;;YAGH,eAAe,CAAC,OAAO,CAAC,UAAC,SAAyB;gBAChD,IAAI,KAAI,CAAC,QAAQ,EAAE;oBACjB,KAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,EAAE;wBAAC,cAAc;6BAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;4BAAd,yBAAc;;wBACzC,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;4BACrB,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;yBAChB;wBAED,IAAI,KAAI,CAAC,SAAS,CAAC,EAAE;4BACnB,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC;gCACZ,IAAI,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE;oCACpC,KAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iCAC5B;6BACF,CAAC,CAAC;yBACJ;qBACF,CAAC,CAAC;iBACJ;aACF,CAAC,CAAC;;YAGH,kBAAkB,CAAC,OAAO,CAAC,UAAC,SAA4B;gBACtD,IAAI,KAAI,CAAC,QAAQ,EAAE;oBACjB,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,SAAS,EAAE;wBAAC,cAAc;6BAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;4BAAd,yBAAc;;wBACnD,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE;4BACrB,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;yBAChB;wBAED,IAAI,KAAI,CAAC,SAAS,CAAC,EAAE;4BACnB,IAAI,KAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE;gCACpC,KAAI,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;6BAC5B;yBACF;qBACF,CAAC,CAAC;iBACJ;aACF,CAAC,CAAC;YAEH,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC;gBAEhE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC;aACzC;SACF;;;;QAED,gCAAS;;;QAAT;YACE,IAAI,IAAI,CAAC,UAAU,EAAE;;oBACb,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;gBAEvD,IAAI,OAAO,EAAE;oBACX,IAAI,CAAC,WAAW,EAAE,CAAC;oBAEnB,IAAI,CAAC,QAAQ,EAAE,CAAC;iBACjB;aACF;SACF;;;;QAED,kCAAW;;;QAAX;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,0CAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAoB;oBAC/C,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;iBAClB;gBAED,OAAO,IAAI,CAAC,QAAQ,CAAC;gBAErB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB;SACF;;;;;QAED,kCAAW;;;;QAAX,UAAY,OAAsB;YAAlC,iBAoBC;YAnBC,IAAI,OAAO,CAAC,UAAU,CAAC,EAAE;gBACvB,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,KAAK,OAAO,CAAC,UAAU,CAAC,CAAC,aAAa,EAAE;oBAC1E,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC;wBAC1B,IAAI,KAAI,CAAC,QAAQ,EAAE;;gCACX,MAAM,GAAG,IAAI,SAAS,CAAC,KAAI,CAAC,QAAQ,CAAC;4BAE3C,MAAM,CAAC,MAAM,CAAC,KAAI,CAAC,MAAM,CAAC,CAAC;4BAE3B,KAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;;gCAEzB,QAAQ,GAAG,CAAC,MAAM,CAAC,mBAAmB,IAAI,IAAI,IAAI,IAAI,GAAG,KAAK;4BAEpE,KAAI,CAAC,QAAQ,CAAC,sBAAsB,CAAC,KAAI,CAAC,QAAQ,GAAG,KAAK,GAAG,QAAQ,CAAC,CAAC;4BAEvE,KAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAI,CAAC,QAAQ,GAAG,IAAI,IAAI,MAAM,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC,CAAC;yBAC9E;qBACF,CAAC,CAAC;iBACJ;aACF;SACF;;;;QAEM,0BAAG;;;QAAV;YACE,OAAO,IAAI,CAAC,QAAQ,CAAC;SACtB;;;;QAEM,4BAAK;;;QAAZ;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;gBAE3B,IAAI,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;aAChC;SACF;;;;QAEM,+BAAQ;;;QAAf;YACE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;aACjC;SACF;;;;;;QAEM,+BAAQ;;;;;QAAf,UAAgB,KAAa,EAAE,SAAkB;YAC/C,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,EAAE,SAAS,CAAC,CAAC;aAChD;SACF;;oBAlKFC,cAAS,SAAC;wBACT,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,QAAQ;qBACnB;;;;oBAT8BC,WAAM;oBAAEC,eAAU;oBAC/BC,oBAAe;oDAgC5BC,aAAQ,YAAIC,WAAM,SAAC,UAAU;;;+BAlB/BC,UAAK;6BAELA,UAAK,SAAC,KAAK;2BAEXC,WAAM;4BACNA,WAAM;2BAENA,WAAM;4BACNA,WAAM;6BAENA,WAAM;mCAENA,WAAM;oCACNA,WAAM;sCACNA,WAAM;;QA4IT,mBAAC;KAnKD;;;;;;ACVA;QAyDE;YApCQ,YAAO,GAAW,EAAE,CAAC;YAUpB,aAAQ,GAAY,KAAK,CAAC;YAE1B,SAAI,GAAW,EAAE,CAAC;YAClB,UAAK,GAAW,EAAE,CAAC;YAKnB,gBAAW,GAAY,IAAI,CAAC;YAE3B,SAAI,GAAG,IAAIT,iBAAY,EAAO,CAAC;YAC/B,UAAK,GAAG,IAAIA,iBAAY,EAAO,CAAC;YAEhC,SAAI,GAAG,IAAIA,iBAAY,EAAO,CAAC;YAC/B,UAAK,GAAG,IAAIA,iBAAY,EAAO,CAAC;YAEhC,WAAM,GAAG,IAAIA,iBAAY,EAAO,CAAC;YAEjC,gBAAW,GAAG,IAAIA,iBAAY,EAAU,CAAC;YAEzC,iBAAY,GAAG,IAAIA,iBAAY,EAAO,CAAC;YACvC,kBAAa,GAAG,IAAIA,iBAAY,EAAO,CAAC;YACxC,oBAAe,GAAG,IAAIA,iBAAY,EAAO,CAAC;SAIpC;QAlChB,sBACI,+BAAK;;;;YADT;gBAEE,OAAO,IAAI,CAAC,OAAO,CAAC;aACrB;;;;;YACD,UAAU,KAAa;gBACrB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;aACxB;;;WAHA;;;;QAiCD,sCAAe;;;QAAf;YACE,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,EAAE;gBACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;aACrC;SACF;;;;;;;QAEO,iCAAU;;;;;;QAAlB,UAAmB,KAAa,EAAE,KAAe;YAC/C,IAAI,KAAK,IAAI,KAAK,KAAK,IAAI,CAAC,OAAO,EAAE;gBACnC,IAAI,IAAI,CAAC,YAAY,EAAE;oBACrB,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;iBACtC;gBAED,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;aACtB;SACF;;;;QAEM,gCAAS;;;QAAhB;YACE,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,EAAE,CAAC;YAEhC,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;YAEjD,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC;YAEpD,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;;;;;QAEM,sCAAe;;;;QAAtB,UAAuB,KAAU;YAC/B,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAExB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC;gBAElD,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnC;SACF;;oBAhFFU,cAAS,SAAC;wBACT,QAAQ,EAAE,KAAK;wBACf,QAAQ,EAAE,QAAQ;wBAClB,qXAAgD;wBAEhD,aAAa,EAAEC,sBAAiB,CAAC,IAAI;;qBACtC;;;;;4BAIEH,UAAK;+BAQLA,UAAK;2BAELA,UAAK;4BACLA,UAAK;6BAELA,UAAK;kCAELI,gBAAW,SAAC,WAAW,cACvBJ,UAAK;2BAELC,WAAM;4BACNA,WAAM;2BAENA,WAAM;4BACNA,WAAM;6BAENA,WAAM;kCAENA,WAAM;mCAENA,WAAM;oCACNA,WAAM;sCACNA,WAAM;mCAENI,cAAS,SAAC,YAAY;;QAuCzB,mBAAC;KAjFD;;;;;;ACbA;QAOA;SAOC;;oBAPAC,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAE,YAAY,EAAE,YAAY,CAAE;wBAC5C,OAAO,EAAE,CAAEC,mBAAY,CAAE;wBACzB,OAAO,EAAE,CAAEA,mBAAY,EAAE,YAAY,EAAE,YAAY,CAAE;wBACrD,SAAS,EAAE,EAAE;qBACd;;QAED,gBAAC;KAPD;;;;;;;;;;;;;;;;"}