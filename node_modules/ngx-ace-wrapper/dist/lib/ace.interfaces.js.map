{"version":3,"file":"ace.interfaces.js","sourceRoot":"","sources":["../../src/lib/ace.interfaces.ts"],"names":[],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const ACE_CONFIG = new InjectionToken<AceConfigInterface>('ACE_CONFIG');\n\nexport type AceEditorEvent = 'blur' | 'focus' | 'copy' | 'paste' | 'change' | 'changeSession';\n\nexport type AceSelectionEvent = 'changeCursor' | 'changeSelection';\n\nexport const AceEditorEvents: AceEditorEvent[] = [\n  'blur',\n  'focus',\n\n  'copy',\n  'paste',\n\n  'change',\n  'changeSession'\n];\n\nexport const AceSelectionEvents: AceSelectionEvent[] = [\n  'changeCursor',\n  'changeSelection'\n];\n\nexport interface AceConfigInterface {\n  readOnly?: boolean,\n  cursorStyle?: 'ace' | 'slim' | 'smooth' | 'wide',\n  selectionStyle?: 'line' | 'text',\n  mergeUndoDeltas?: boolean | 'always',\n  behavioursEnabled?: boolean,\n  highlightActiveLine?: boolean,\n  highlightSelectedWord?: boolean,\n  wrapBehavioursEnabled?: boolean,\n  copyWithEmptySelection?: boolean,\n  navigateWithinSoftTabs?: boolean,\n  autoScrollEditorIntoView?: boolean,\n\n  mode?: string,\n  wrap?: boolean,\n  tabSize?: number,\n  overwrite?: boolean,\n  useWorker?: boolean,\n  foldStyle?: string,\n  newLineMode?: string,\n  useSoftTabs?: boolean,\n  firstLineNumber?: number,\n\n  theme?: string,\n  minLines?: number,\n  maxLines?: number,\n  fontSize?: number | string,\n  fontFamily?: string,\n  showGutter?: boolean,\n  printMargin?: number,\n  scrollPastEnd?: boolean,\n  animatedScroll?: boolean,\n  showInvisibles?: boolean,\n  fadeFoldWidgets?: boolean,\n  showFoldWidgets?: boolean,\n  showLineNumbers?: boolean,\n  showPrintMargin?: boolean,\n  fixedWidthGutter?: boolean,\n  printMarginColumn?: boolean,\n  displayIndentGuides?: boolean,\n  highlightGutterLine?: boolean,\n  hScrollBarAlwaysVisible?: boolean,\n  vScrollBarAlwaysVisible?: boolean,\n\n  dragDelay?: number,\n  dragEnabled?: boolean,\n  scrollSpeed?: number,\n  focusTimeout?: number,\n  tooltipFollowsMouse?: boolean\n}\n\nexport class AceConfig implements AceConfigInterface {\n  readOnly?: boolean;\n  cursorStyle?: 'ace' | 'slim' | 'smooth' | 'wide';\n  selectionStyle?: 'line' | 'text';\n  mergeUndoDeltas?: boolean | 'always';\n  behavioursEnabled?: boolean;\n  highlightActiveLine?: boolean;\n  highlightSelectedWord?: boolean;\n  wrapBehavioursEnabled?: boolean;\n  copyWithEmptySelection?: boolean;\n  navigateWithinSoftTabs?: boolean;\n  autoScrollEditorIntoView?: boolean;\n\n  mode?: string;\n  wrap?: boolean;\n  tabSize?: number;\n  overwrite?: boolean;\n  useWorker?: boolean;\n  foldStyle?: string;\n  newLineMode?: string;\n  useSoftTabs?: boolean;\n  firstLineNumber?: number;\n\n  theme?: string;\n  minLines?: number;\n  maxLines?: number;\n  fontSize?: number | string;\n  fontFamily?: string;\n  showGutter?: boolean;\n  printMargin?: number;\n  scrollPastEnd?: boolean;\n  animatedScroll?: boolean;\n  showInvisibles?: boolean;\n  fadeFoldWidgets?: boolean;\n  showLineNumbers?: boolean;\n  showFoldWidgets?: boolean;\n  showPrintMargin?: boolean;\n  fixedWidthGutter?: boolean;\n  printMarginColumn?: boolean;\n  displayIndentGuides?: boolean;\n  highlightGutterLine?: boolean;\n  hScrollBarAlwaysVisible?: boolean;\n  vScrollBarAlwaysVisible?: boolean;\n\n  dragDelay?: number;\n  dragEnabled?: boolean;\n  scrollSpeed?: number;\n  focusTimeout?: number;\n  tooltipFollowsMouse?: boolean;\n\n  constructor(config: AceConfigInterface = {}) {\n    this.assign(config);\n  }\n\n  assign(config: AceConfigInterface | any = {}, target?: any) {\n    target = target || this;\n\n    for (const key in config) {\n      if (config[key] && !Array.isArray(config[key]) && typeof config[key] === 'object') {\n        target[key] = {};\n\n        this.assign(config[key], target[key]);\n      } else {\n        target[key] = config[key];\n      }\n    }\n  }\n}\n"]}