{"version":3,"file":"IsoFS.js","sourceRoot":"","sources":["../../../../../src/backend/IsoFS.ts"],"names":[],"mappings":"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","sourcesContent":["import {ApiError, ErrorCode} from '../core/api_error';\nimport {default as Stats, FileType} from '../core/node_fs_stats';\nimport {SynchronousFileSystem, FileSystem, BFSCallback, FileSystemOptions} from '../core/file_system';\nimport {File} from '../core/file';\nimport {FileFlag, ActionType} from '../core/file_flag';\nimport {NoSyncFile} from '../generic/preload_file';\nimport {copyingSlice, deprecationMessage, bufferValidator} from '../core/util';\nimport * as path from 'path';\n\n/**\n * @hidden\n */\nconst rockRidgeIdentifier = \"IEEE_P1282\";\n/**\n * @hidden\n */\nconst enum VolumeDescriptorTypeCode {\n  BootRecord = 0,\n  PrimaryVolumeDescriptor = 1,\n  SupplementaryVolumeDescriptor = 2,\n  VolumePartitionDescriptor = 3,\n  VolumeDescriptorSetTerminator = 255\n}\n\n/**\n * @hidden\n */\ntype TGetString = (d: Buffer, i: number, len: number) => string;\n\n/**\n * @hidden\n */\nfunction getASCIIString(data: Buffer, startIndex: number, length: number) {\n  return data.toString('ascii', startIndex, startIndex + length).trim();\n}\n\n/**\n * @hidden\n */\nfunction getJolietString(data: Buffer, startIndex: number, length: number): string {\n  if (length === 1) {\n    // Special: Root, parent, current directory are still a single byte.\n    return String.fromCharCode(data[startIndex]);\n  }\n  // UTF16-BE, which isn't natively supported by NodeJS Buffers.\n  // Length should be even, but pessimistically floor just in case.\n  const pairs = Math.floor(length / 2);\n  const chars = new Array(pairs);\n  for (let i = 0; i < pairs; i++) {\n    const pos = startIndex + (i << 1);\n    chars[i] = String.fromCharCode(data[pos + 1] | (data[pos] << 8));\n  }\n  return chars.join('');\n}\n\n/**\n * @hidden\n */\nfunction getDate(data: Buffer, startIndex: number): Date {\n  const year = parseInt(getASCIIString(data, startIndex, 4), 10);\n  const mon = parseInt(getASCIIString(data, startIndex + 4, 2), 10);\n  const day = parseInt(getASCIIString(data, startIndex + 6, 2), 10);\n  const hour = parseInt(getASCIIString(data, startIndex + 8, 2), 10);\n  const min = parseInt(getASCIIString(data, startIndex + 10, 2), 10);\n  const sec = parseInt(getASCIIString(data, startIndex + 12, 2), 10);\n  const hundrethsSec = parseInt(getASCIIString(data, startIndex + 14, 2), 10);\n  // Last is a time-zone offset, but JavaScript dates don't support time zones well.\n  return new Date(year, mon, day, hour, min, sec, hundrethsSec * 100);\n}\n\n/**\n * @hidden\n */\nfunction getShortFormDate(data: Buffer, startIndex: number): Date {\n  const yearsSince1900 = data[startIndex];\n  const month = data[startIndex + 1];\n  const day = data[startIndex + 2];\n  const hour = data[startIndex + 3];\n  const minute = data[startIndex + 4];\n  const second = data[startIndex + 5];\n  // JavaScript's Date support isn't so great; ignore timezone.\n  // const offsetFromGMT = this._data[24];\n  return new Date(yearsSince1900, month - 1, day, hour, minute, second);\n}\n\n/**\n * @hidden\n */\nfunction constructSystemUseEntry(bigData: Buffer, i: number): SystemUseEntry {\n  const data = bigData.slice(i);\n  const sue = new SystemUseEntry(data);\n  switch (sue.signatureWord()) {\n    case SystemUseEntrySignatures.CE:\n      return new CEEntry(data);\n    case SystemUseEntrySignatures.PD:\n      return new  PDEntry(data);\n    case SystemUseEntrySignatures.SP:\n      return new SPEntry(data);\n    case SystemUseEntrySignatures.ST:\n      return new STEntry(data);\n    case SystemUseEntrySignatures.ER:\n      return new EREntry(data);\n    case SystemUseEntrySignatures.ES:\n      return new ESEntry(data);\n    case SystemUseEntrySignatures.PX:\n      return new PXEntry(data);\n    case SystemUseEntrySignatures.PN:\n      return new PNEntry(data);\n    case SystemUseEntrySignatures.SL:\n      return new SLEntry(data);\n    case SystemUseEntrySignatures.NM:\n      return new NMEntry(data);\n    case SystemUseEntrySignatures.CL:\n      return new CLEntry(data);\n    case SystemUseEntrySignatures.PL:\n      return new PLEntry(data);\n    case SystemUseEntrySignatures.RE:\n      return new REEntry(data);\n    case SystemUseEntrySignatures.TF:\n      return new TFEntry(data);\n    case SystemUseEntrySignatures.SF:\n      return new SFEntry(data);\n    case SystemUseEntrySignatures.RR:\n      return new RREntry(data);\n    default:\n      return sue;\n  }\n}\n\n/**\n * @hidden\n */\nfunction constructSystemUseEntries(data: Buffer, i: number, len: number, isoData: Buffer): SystemUseEntry[] {\n  // If the remaining allocated space following the last recorded System Use Entry in a System\n  // Use field or Continuation Area is less than four bytes long, it cannot contain a System\n  // Use Entry and shall be ignored\n  len = len - 4;\n  let entries = new Array<SystemUseEntry>();\n  while (i < len) {\n    const entry = constructSystemUseEntry(data, i);\n    const length = entry.length();\n    if (length === 0) {\n      // Invalid SU section; prevent infinite loop.\n      return entries;\n    }\n    i += length;\n    if (entry instanceof STEntry) {\n      // ST indicates the end of entries.\n      break;\n    }\n    if (entry instanceof CEEntry) {\n      entries = entries.concat(entry.getEntries(isoData));\n    } else {\n      entries.push(entry);\n    }\n  }\n  return entries;\n}\n\n/**\n * @hidden\n */\nclass VolumeDescriptor {\n  protected _data: Buffer;\n  constructor(data: Buffer) {\n    this._data = data;\n  }\n  public type(): VolumeDescriptorTypeCode {\n    return this._data[0];\n  }\n  public standardIdentifier(): string {\n    return getASCIIString(this._data, 1, 5);\n  }\n  public version(): number {\n    return this._data[6];\n  }\n  public data(): Buffer {\n    return this._data.slice(7, 2048);\n  }\n}\n\n/**\n * @hidden\n */\nabstract class PrimaryOrSupplementaryVolumeDescriptor extends VolumeDescriptor {\n  private _root: DirectoryRecord | null = null;\n  constructor(data: Buffer) {\n    super(data);\n  }\n  public systemIdentifier(): string {\n    return this._getString32(8);\n  }\n  public volumeIdentifier(): string {\n    return this._getString32(40);\n  }\n  public volumeSpaceSize(): number {\n    return this._data.readUInt32LE(80);\n  }\n  public volumeSetSize(): number {\n    return this._data.readUInt16LE(120);\n  }\n  public volumeSequenceNumber(): number {\n    return this._data.readUInt16LE(124);\n  }\n  public logicalBlockSize(): number {\n    return this._data.readUInt16LE(128);\n  }\n  public pathTableSize(): number {\n    return this._data.readUInt32LE(132);\n  }\n  public locationOfTypeLPathTable(): number {\n    return this._data.readUInt32LE(140);\n  }\n  public locationOfOptionalTypeLPathTable(): number {\n    return this._data.readUInt32LE(144);\n  }\n  public locationOfTypeMPathTable(): number {\n    return this._data.readUInt32BE(148);\n  }\n  public locationOfOptionalTypeMPathTable(): number {\n    return this._data.readUInt32BE(152);\n  }\n  public rootDirectoryEntry(isoData: Buffer): DirectoryRecord {\n    if (this._root === null) {\n      this._root = this._constructRootDirectoryRecord(this._data.slice(156));\n      this._root.rootCheckForRockRidge(isoData);\n    }\n    return this._root;\n  }\n  public volumeSetIdentifier(): string {\n    return this._getString(190, 128);\n  }\n  public publisherIdentifier(): string {\n    return this._getString(318, 128);\n  }\n  public dataPreparerIdentifier(): string {\n    return this._getString(446, 128);\n  }\n  public applicationIdentifier(): string {\n    return this._getString(574, 128);\n  }\n  public copyrightFileIdentifier(): string {\n    return this._getString(702, 38);\n  }\n  public abstractFileIdentifier(): string {\n    return this._getString(740, 36);\n  }\n  public bibliographicFileIdentifier(): string {\n    return this._getString(776, 37);\n  }\n  public volumeCreationDate(): Date {\n    return getDate(this._data, 813);\n  }\n  public volumeModificationDate(): Date {\n    return getDate(this._data, 830);\n  }\n  public volumeExpirationDate(): Date {\n    return getDate(this._data, 847);\n  }\n  public volumeEffectiveDate(): Date {\n    return getDate(this._data, 864);\n  }\n  public fileStructureVersion(): number {\n    return this._data[881];\n  }\n  public applicationUsed(): Buffer {\n    return this._data.slice(883, 883 + 512);\n  }\n  public reserved(): Buffer {\n    return this._data.slice(1395, 1395 + 653);\n  }\n  public abstract name(): string;\n  protected abstract _constructRootDirectoryRecord(data: Buffer): DirectoryRecord;\n  protected abstract _getString(idx: number, len: number): string;\n  protected _getString32(idx: number): string {\n    return this._getString(idx, 32);\n  }\n}\n\n/**\n * @hidden\n */\nclass PrimaryVolumeDescriptor extends PrimaryOrSupplementaryVolumeDescriptor {\n  constructor(data: Buffer) {\n    super(data);\n    if (this.type() !== VolumeDescriptorTypeCode.PrimaryVolumeDescriptor) {\n      throw new ApiError(ErrorCode.EIO, `Invalid primary volume descriptor.`);\n    }\n  }\n  public name() {\n    return \"ISO9660\";\n  }\n  protected _constructRootDirectoryRecord(data: Buffer): DirectoryRecord {\n    return new ISODirectoryRecord(data, -1);\n  }\n  protected _getString(idx: number, len: number): string {\n    return this._getString(idx, len);\n  }\n}\n\n/**\n * @hidden\n */\nclass SupplementaryVolumeDescriptor extends PrimaryOrSupplementaryVolumeDescriptor {\n  constructor(data: Buffer) {\n    super(data);\n    if (this.type() !== VolumeDescriptorTypeCode.SupplementaryVolumeDescriptor) {\n      throw new ApiError(ErrorCode.EIO, `Invalid supplementary volume descriptor.`);\n    }\n    const escapeSequence = this.escapeSequence();\n    const third = escapeSequence[2];\n    // Third character identifies what 'level' of the UCS specification to follow.\n    // We ignore it.\n    if (escapeSequence[0] !== 0x25 || escapeSequence[1] !== 0x2F ||\n       (third !== 0x40 && third !== 0x43 && third !== 0x45)) {\n      throw new ApiError(ErrorCode.EIO, `Unrecognized escape sequence for SupplementaryVolumeDescriptor: ${escapeSequence.toString()}`);\n    }\n  }\n  public name() {\n    return \"Joliet\";\n  }\n  public escapeSequence(): Buffer {\n    return this._data.slice(88, 120);\n  }\n  protected _constructRootDirectoryRecord(data: Buffer): DirectoryRecord {\n    return new JolietDirectoryRecord(data, -1);\n  }\n  protected _getString(idx: number, len: number): string {\n    return getJolietString(this._data, idx, len);\n  }\n}\n\n/**\n * @hidden\n */\nconst enum FileFlags {\n  Hidden = 1,\n  Directory = 1 << 1,\n  AssociatedFile = 1 << 2,\n  EARContainsInfo = 1 << 3,\n  EARContainsPerms = 1 << 4,\n  FinalDirectoryRecordForFile = 1 << 5\n}\n\n/**\n * @hidden\n */\nabstract class DirectoryRecord {\n  protected _data: Buffer;\n  // Offset at which system use entries begin. Set to -1 if not enabled.\n  protected _rockRidgeOffset: number;\n  protected _suEntries: SystemUseEntry[] | null = null;\n  private _fileOrDir: Buffer | Directory<DirectoryRecord> | null = null;\n  constructor(data: Buffer, rockRidgeOffset: number) {\n    this._data = data;\n    this._rockRidgeOffset = rockRidgeOffset;\n  }\n  public hasRockRidge(): boolean {\n    return this._rockRidgeOffset > -1;\n  }\n  public getRockRidgeOffset(): number {\n    return this._rockRidgeOffset;\n  }\n  /**\n   * !!ONLY VALID ON ROOT NODE!!\n   * Checks if Rock Ridge is enabled, and sets the offset.\n   */\n  public rootCheckForRockRidge(isoData: Buffer): void {\n    const dir = this.getDirectory(isoData);\n    this._rockRidgeOffset = dir.getDotEntry(isoData)._getRockRidgeOffset(isoData);\n    if (this._rockRidgeOffset > -1) {\n      // Wipe out directory. Start over with RR knowledge.\n      this._fileOrDir = null;\n    }\n  }\n  public length(): number {\n    return this._data[0];\n  }\n  public extendedAttributeRecordLength(): number {\n    return this._data[1];\n  }\n  public lba(): number {\n    return this._data.readUInt32LE(2) * 2048;\n  }\n  public dataLength(): number {\n    return this._data.readUInt32LE(10);\n  }\n  public recordingDate(): Date {\n    return getShortFormDate(this._data, 18);\n  }\n  public fileFlags(): number {\n    return this._data[25];\n  }\n  public fileUnitSize(): number {\n    return this._data[26];\n  }\n  public interleaveGapSize(): number {\n    return this._data[27];\n  }\n  public volumeSequenceNumber(): number {\n    return this._data.readUInt16LE(28);\n  }\n  public identifier(): string {\n    return this._getString(33, this._data[32]);\n  }\n  public fileName(isoData: Buffer): string {\n    if (this.hasRockRidge()) {\n      const fn = this._rockRidgeFilename(isoData);\n      if (fn !== null) {\n        return fn;\n      }\n    }\n    const ident = this.identifier();\n    if (this.isDirectory(isoData)) {\n      return ident;\n    }\n    // Files:\n    // - MUST have 0x2E (.) separating the name from the extension\n    // - MUST have 0x3B (;) separating the file name and extension from the version\n    // Gets expanded to two-byte char in Unicode directory records.\n    const versionSeparator = ident.indexOf(';');\n    if (versionSeparator === -1) {\n      // Some Joliet filenames lack the version separator, despite the standard\n      // specifying that it should be there.\n      return ident;\n    } else if (ident[versionSeparator - 1] === '.') {\n      // Empty extension. Do not include '.' in the filename.\n      return ident.slice(0, versionSeparator - 1);\n    } else {\n      // Include up to version separator.\n      return ident.slice(0, versionSeparator);\n    }\n  }\n  public isDirectory(isoData: Buffer): boolean {\n    let rv = !!(this.fileFlags() & FileFlags.Directory);\n    // If it lacks the Directory flag, it may still be a directory if we've exceeded the directory\n    // depth limit. Rock Ridge marks these as files and adds a special attribute.\n    if (!rv && this.hasRockRidge()) {\n      rv = this.getSUEntries(isoData).filter((e) => e instanceof CLEntry).length > 0;\n    }\n    return rv;\n  }\n  public isSymlink(isoData: Buffer): boolean {\n    return this.hasRockRidge() && this.getSUEntries(isoData).filter((e) => e instanceof SLEntry).length > 0;\n  }\n  public getSymlinkPath(isoData: Buffer): string {\n    let p = \"\";\n    const entries = this.getSUEntries(isoData);\n    const getStr = this._getGetString();\n    for (const entry of entries) {\n      if (entry instanceof SLEntry) {\n        const components = entry.componentRecords();\n        for (const component of components) {\n          const flags = component.flags();\n          if (flags & SLComponentFlags.CURRENT) {\n            p += \"./\";\n          } else if (flags & SLComponentFlags.PARENT) {\n            p += \"../\";\n          } else if (flags & SLComponentFlags.ROOT) {\n            p += \"/\";\n          } else {\n            p += component.content(getStr);\n            if (!(flags & SLComponentFlags.CONTINUE)) {\n              p += '/';\n            }\n          }\n        }\n        if (!entry.continueFlag()) {\n          // We are done with this link.\n          break;\n        }\n      }\n    }\n    if (p.length > 1 && p[p.length - 1] === '/') {\n      // Trim trailing '/'.\n      return p.slice(0, p.length - 1);\n    } else {\n      return p;\n    }\n  }\n  public getFile(isoData: Buffer): Buffer {\n    if (this.isDirectory(isoData)) {\n      throw new Error(`Tried to get a File from a directory.`);\n    }\n    if (this._fileOrDir === null) {\n      this._fileOrDir = isoData.slice(this.lba(), this.lba() + this.dataLength());\n    }\n    return <Buffer> this._fileOrDir;\n  }\n  public getDirectory(isoData: Buffer): Directory<DirectoryRecord> {\n    if (!this.isDirectory(isoData)) {\n      throw new Error(`Tried to get a Directory from a file.`);\n    }\n    if (this._fileOrDir === null) {\n      this._fileOrDir = this._constructDirectory(isoData);\n    }\n    return <Directory<this>> this._fileOrDir;\n  }\n  public getSUEntries(isoData: Buffer): SystemUseEntry[] {\n    if (!this._suEntries) {\n      this._constructSUEntries(isoData);\n    }\n    return this._suEntries!;\n  }\n  protected abstract _getString(i: number, len: number): string;\n  protected abstract _getGetString(): TGetString;\n  protected abstract _constructDirectory(isoData: Buffer): Directory<DirectoryRecord>;\n  protected _rockRidgeFilename(isoData: Buffer): string | null {\n    const nmEntries = <NMEntry[]> this.getSUEntries(isoData).filter((e) => e instanceof NMEntry);\n    if (nmEntries.length === 0 || nmEntries[0].flags() & (NMFlags.CURRENT | NMFlags.PARENT)) {\n      return null;\n    }\n    let str = '';\n    const getString = this._getGetString();\n    for (const e of nmEntries) {\n      str += e.name(getString);\n      if (!(e.flags() & NMFlags.CONTINUE)) {\n        break;\n      }\n    }\n    return str;\n  }\n  private _constructSUEntries(isoData: Buffer): void {\n    let i = 33 + this._data[32];\n    if (i % 2 === 1) {\n      // Skip padding field.\n      i++;\n    }\n    i += this._rockRidgeOffset;\n    this._suEntries = constructSystemUseEntries(this._data, i, this.length(), isoData);\n  }\n  /**\n   * !!ONLY VALID ON FIRST ENTRY OF ROOT DIRECTORY!!\n   * Returns -1 if rock ridge is not enabled. Otherwise, returns the offset\n   * at which system use fields begin.\n   */\n  private _getRockRidgeOffset(isoData: Buffer): number {\n    // In the worst case, we get some garbage SU entries.\n    // Fudge offset to 0 before proceeding.\n    this._rockRidgeOffset = 0;\n    const suEntries = this.getSUEntries(isoData);\n    if (suEntries.length > 0) {\n      const spEntry = suEntries[0];\n      if (spEntry instanceof SPEntry && spEntry.checkBytesPass()) {\n        // SUSP is in use.\n        for (let i = 1; i < suEntries.length; i++) {\n          const entry = suEntries[i];\n          if (entry instanceof RREntry || (entry instanceof EREntry && entry.extensionIdentifier() === rockRidgeIdentifier)) {\n            // Rock Ridge is in use!\n            return spEntry.bytesSkipped();\n          }\n        }\n      }\n    }\n    // Failed.\n    this._rockRidgeOffset = -1;\n    return -1;\n  }\n}\n\n/**\n * @hidden\n */\nclass ISODirectoryRecord extends DirectoryRecord {\n  constructor(data: Buffer, rockRidgeOffset: number) {\n    super(data, rockRidgeOffset);\n  }\n  protected _getString(i: number, len: number): string {\n    return getASCIIString(this._data, i, len);\n  }\n  protected _constructDirectory(isoData: Buffer): Directory<DirectoryRecord> {\n    return new ISODirectory(this, isoData);\n  }\n  protected _getGetString(): TGetString {\n    return getASCIIString;\n  }\n}\n\n/**\n * @hidden\n */\nclass JolietDirectoryRecord extends DirectoryRecord {\n  constructor(data: Buffer, rockRidgeOffset: number) {\n    super(data, rockRidgeOffset);\n  }\n  protected _getString(i: number, len: number): string {\n    return getJolietString(this._data, i, len);\n  }\n  protected _constructDirectory(isoData: Buffer): Directory<DirectoryRecord> {\n    return new JolietDirectory(this, isoData);\n  }\n  protected _getGetString(): TGetString {\n    return getJolietString;\n  }\n}\n\n/**\n * @hidden\n */\nconst enum SystemUseEntrySignatures {\n  CE = 0x4345,\n  PD = 0x5044,\n  SP = 0x5350,\n  ST = 0x5354,\n  ER = 0x4552,\n  ES = 0x4553,\n  PX = 0x5058,\n  PN = 0x504E,\n  SL = 0x534C,\n  NM = 0x4E4D,\n  CL = 0x434C,\n  PL = 0x504C,\n  RE = 0x5245,\n  TF = 0x5446,\n  SF = 0x5346,\n  RR = 0x5252\n}\n\n/**\n * @hidden\n */\nclass SystemUseEntry {\n  protected _data: Buffer;\n  constructor(data: Buffer) {\n    this._data = data;\n  }\n  public signatureWord(): SystemUseEntrySignatures {\n    return this._data.readUInt16BE(0);\n  }\n  public signatureWordString(): string {\n    return getASCIIString(this._data, 0, 2);\n  }\n  public length(): number {\n    return this._data[2];\n  }\n  public suVersion(): number {\n    return this._data[3];\n  }\n}\n\n/**\n * Continuation entry.\n * @hidden\n */\nclass CEEntry extends SystemUseEntry {\n  private _entries: SystemUseEntry[] | null = null;\n  constructor(data: Buffer) {\n    super(data);\n  }\n  /**\n   * Logical block address of the continuation area.\n   */\n  public continuationLba(): number {\n    return this._data.readUInt32LE(4);\n  }\n  /**\n   * Offset into the logical block.\n   */\n  public continuationLbaOffset(): number {\n    return this._data.readUInt32LE(12);\n  }\n  /**\n   * Length of the continuation area.\n   */\n  public continuationLength(): number {\n    return this._data.readUInt32LE(20);\n  }\n  public getEntries(isoData: Buffer): SystemUseEntry[] {\n    if (!this._entries) {\n      const start = this.continuationLba() * 2048 + this.continuationLbaOffset();\n      this._entries = constructSystemUseEntries(isoData, start, this.continuationLength(), isoData);\n    }\n    return this._entries;\n  }\n}\n\n/**\n * Padding entry.\n * @hidden\n */\nclass PDEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n}\n\n/**\n * Identifies that SUSP is in-use.\n * @hidden\n */\nclass SPEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n  public checkBytesPass(): boolean {\n    return this._data[4] === 0xBE && this._data[5] === 0xEF;\n  }\n  public bytesSkipped(): number {\n    return this._data[6];\n  }\n}\n\n/**\n * Identifies the end of the SUSP entries.\n * @hidden\n */\nclass STEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n}\n\n/**\n * Specifies system-specific extensions to SUSP.\n * @hidden\n */\nclass EREntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n  public identifierLength(): number {\n    return this._data[4];\n  }\n  public descriptorLength(): number {\n    return this._data[5];\n  }\n  public sourceLength(): number {\n    return this._data[6];\n  }\n  public extensionVersion(): number {\n    return this._data[7];\n  }\n  public extensionIdentifier(): string {\n    return getASCIIString(this._data, 8, this.identifierLength());\n  }\n  public extensionDescriptor(): string {\n    return getASCIIString(this._data, 8 + this.identifierLength(), this.descriptorLength());\n  }\n  public extensionSource(): string {\n    return getASCIIString(this._data, 8 + this.identifierLength() + this.descriptorLength(), this.sourceLength());\n  }\n}\n\n/**\n * @hidden\n */\nclass ESEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n  public extensionSequence(): number {\n    return this._data[4];\n  }\n}\n\n/**\n * RockRidge: Marks that RockRidge is in use [deprecated]\n * @hidden\n */\nclass RREntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n}\n\n/**\n * RockRidge: Records POSIX file attributes.\n * @hidden\n */\nclass PXEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n  public mode(): number {\n    return this._data.readUInt32LE(4);\n  }\n  public fileLinks(): number {\n    return this._data.readUInt32LE(12);\n  }\n  public uid(): number {\n    return this._data.readUInt32LE(20);\n  }\n  public gid(): number {\n    return this._data.readUInt32LE(28);\n  }\n  public inode(): number {\n    return this._data.readUInt32LE(36);\n  }\n}\n\n/**\n * RockRidge: Records POSIX device number.\n * @hidden\n */\nclass PNEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n  public devTHigh(): number {\n    return this._data.readUInt32LE(4);\n  }\n  public devTLow(): number {\n    return this._data.readUInt32LE(12);\n  }\n}\n\n/**\n * RockRidge: Records symbolic link\n * @hidden\n */\nclass SLEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n  public flags(): number {\n    return this._data[4];\n  }\n  public continueFlag(): number {\n    return this.flags() & 0x1;\n  }\n  public componentRecords(): SLComponentRecord[] {\n    const records = new Array<SLComponentRecord>();\n    let i = 5;\n    while (i < this.length()) {\n      const record = new SLComponentRecord(this._data.slice(i));\n      records.push(record);\n      i += record.length();\n    }\n    return records;\n  }\n}\n\n/**\n * @hidden\n */\nconst enum SLComponentFlags {\n  CONTINUE = 1,\n  CURRENT = 1 << 1,\n  PARENT = 1 << 2,\n  ROOT = 1 << 3\n}\n\n/**\n * @hidden\n */\nclass SLComponentRecord {\n  private _data: Buffer;\n  constructor(data: Buffer) {\n    this._data = data;\n  }\n  public flags(): SLComponentFlags {\n    return this._data[0];\n  }\n  public length(): number {\n    return 2 + this.componentLength();\n  }\n  public componentLength(): number {\n    return this._data[1];\n  }\n  public content(getString: TGetString): string {\n    return getString(this._data, 2, this.componentLength());\n  }\n}\n\n/**\n * @hidden\n */\nconst enum NMFlags {\n  CONTINUE = 1,\n  CURRENT = 1 << 1,\n  PARENT = 1 << 2\n}\n\n/**\n * RockRidge: Records alternate file name\n * @hidden\n */\nclass NMEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n  public flags(): NMFlags {\n    return this._data[4];\n  }\n  public name(getString: TGetString): string {\n    return getString(this._data, 5, this.length() - 5);\n  }\n}\n\n/**\n * RockRidge: Records child link\n * @hidden\n */\nclass CLEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n  public childDirectoryLba(): number {\n    return this._data.readUInt32LE(4);\n  }\n}\n\n/**\n * RockRidge: Records parent link.\n * @hidden\n */\nclass PLEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n  public parentDirectoryLba(): number {\n    return this._data.readUInt32LE(4);\n  }\n}\n\n/**\n * RockRidge: Records relocated directory.\n * @hidden\n */\nclass REEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n}\n\n/**\n * @hidden\n */\nconst enum TFFlags {\n  CREATION = 1,\n  MODIFY = 1 << 1,\n  ACCESS = 1 << 2,\n  ATTRIBUTES = 1 << 3,\n  BACKUP = 1 << 4,\n  EXPIRATION = 1 << 5,\n  EFFECTIVE = 1 << 6,\n  LONG_FORM = 1 << 7\n}\n\n/**\n * RockRidge: Records file timestamps\n * @hidden\n */\nclass TFEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n  public flags(): number {\n    return this._data[4];\n  }\n  public creation(): Date | null {\n    if (this.flags() & TFFlags.CREATION) {\n      if (this._longFormDates()) {\n        return getDate(this._data, 5);\n      } else {\n        return getShortFormDate(this._data, 5);\n      }\n    } else {\n      return null;\n    }\n  }\n  public modify(): Date | null {\n    if (this.flags() & TFFlags.MODIFY) {\n      const previousDates = (this.flags() & TFFlags.CREATION) ? 1 : 0;\n      if (this._longFormDates) {\n        return getDate(this._data, 5 + (previousDates * 17));\n      } else {\n        return getShortFormDate(this._data, 5 + (previousDates * 7));\n      }\n    } else {\n      return null;\n    }\n  }\n  public access(): Date | null {\n    if (this.flags() & TFFlags.ACCESS) {\n      let previousDates = (this.flags() & TFFlags.CREATION) ? 1 : 0;\n      previousDates += (this.flags() & TFFlags.MODIFY) ? 1 : 0;\n      if (this._longFormDates) {\n        return getDate(this._data, 5 + (previousDates * 17));\n      } else {\n        return getShortFormDate(this._data, 5 + (previousDates * 7));\n      }\n    } else {\n      return null;\n    }\n  }\n  public backup(): Date | null {\n    if (this.flags() & TFFlags.BACKUP) {\n      let previousDates = (this.flags() & TFFlags.CREATION) ? 1 : 0;\n      previousDates += (this.flags() & TFFlags.MODIFY) ? 1 : 0;\n      previousDates += (this.flags() & TFFlags.ACCESS) ? 1 : 0;\n      if (this._longFormDates) {\n        return getDate(this._data, 5 + (previousDates * 17));\n      } else {\n        return getShortFormDate(this._data, 5 + (previousDates * 7));\n      }\n    } else {\n      return null;\n    }\n  }\n  public expiration(): Date | null {\n    if (this.flags() & TFFlags.EXPIRATION) {\n      let previousDates = (this.flags() & TFFlags.CREATION) ? 1 : 0;\n      previousDates += (this.flags() & TFFlags.MODIFY) ? 1 : 0;\n      previousDates += (this.flags() & TFFlags.ACCESS) ? 1 : 0;\n      previousDates += (this.flags() & TFFlags.BACKUP) ? 1 : 0;\n      if (this._longFormDates) {\n        return getDate(this._data, 5 + (previousDates * 17));\n      } else {\n        return getShortFormDate(this._data, 5 + (previousDates * 7));\n      }\n    } else {\n      return null;\n    }\n  }\n  public effective(): Date | null {\n    if (this.flags() & TFFlags.EFFECTIVE) {\n      let previousDates = (this.flags() & TFFlags.CREATION) ? 1 : 0;\n      previousDates += (this.flags() & TFFlags.MODIFY) ? 1 : 0;\n      previousDates += (this.flags() & TFFlags.ACCESS) ? 1 : 0;\n      previousDates += (this.flags() & TFFlags.BACKUP) ? 1 : 0;\n      previousDates += (this.flags() & TFFlags.EXPIRATION) ? 1 : 0;\n      if (this._longFormDates) {\n        return getDate(this._data, 5 + (previousDates * 17));\n      } else {\n        return getShortFormDate(this._data, 5 + (previousDates * 7));\n      }\n    } else {\n      return null;\n    }\n  }\n  private _longFormDates(): boolean {\n    return !!(this.flags() && TFFlags.LONG_FORM);\n  }\n}\n\n/**\n * RockRidge: File data in sparse format.\n * @hidden\n */\nclass SFEntry extends SystemUseEntry {\n  constructor(data: Buffer) {\n    super(data);\n  }\n  public virtualSizeHigh(): number {\n    return this._data.readUInt32LE(4);\n  }\n  public virtualSizeLow(): number {\n    return this._data.readUInt32LE(12);\n  }\n  public tableDepth(): number {\n    return this._data[20];\n  }\n}\n\n/**\n * @hidden\n */\nabstract class Directory<T extends DirectoryRecord> {\n  protected _record: T;\n  private _fileList: string[] = [];\n  private _fileMap: {[name: string]: T} = {};\n  constructor(record: T, isoData: Buffer) {\n    this._record = record;\n    let i = record.lba();\n    let iLimit = i + record.dataLength();\n    if (!(record.fileFlags() & FileFlags.Directory)) {\n      // Must have a CL entry.\n      const cl = <CLEntry> record.getSUEntries(isoData).filter((e) => e instanceof CLEntry)[0];\n      i = cl.childDirectoryLba() * 2048;\n      iLimit = Infinity;\n    }\n\n    while (i < iLimit) {\n      const len = isoData[i];\n      // Zero-padding between sectors.\n      // TODO: Could optimize this to seek to nearest-sector upon\n      // seeing a 0.\n      if (len === 0) {\n        i++;\n        continue;\n      }\n      const r = this._constructDirectoryRecord(isoData.slice(i));\n      const fname = r.fileName(isoData);\n      // Skip '.' and '..' entries.\n      if (fname !== '\\u0000' && fname !== '\\u0001') {\n        // Skip relocated entries.\n        if (!r.hasRockRidge() || r.getSUEntries(isoData).filter((e) => e instanceof REEntry).length === 0) {\n          this._fileMap[fname] = r;\n          this._fileList.push(fname);\n        }\n      } else if (iLimit === Infinity) {\n        // First entry contains needed data.\n        iLimit = i + r.dataLength();\n      }\n      i += r.length();\n    }\n  }\n  /**\n   * Get the record with the given name.\n   * Returns undefined if not present.\n   */\n  public getRecord(name: string): DirectoryRecord {\n    return this._fileMap[name];\n  }\n  public getFileList(): string[] {\n    return this._fileList;\n  }\n  public getDotEntry(isoData: Buffer): T {\n    return this._constructDirectoryRecord(isoData.slice(this._record.lba()));\n  }\n  protected abstract _constructDirectoryRecord(data: Buffer): T;\n}\n\n/**\n * @hidden\n */\nclass ISODirectory extends Directory<ISODirectoryRecord> {\n  constructor(record: ISODirectoryRecord, isoData: Buffer) {\n    super(record, isoData);\n  }\n  protected _constructDirectoryRecord(data: Buffer): ISODirectoryRecord {\n    return new ISODirectoryRecord(data, this._record.getRockRidgeOffset());\n  }\n}\n\n/**\n * @hidden\n */\nclass JolietDirectory extends Directory<JolietDirectoryRecord> {\n  constructor(record: JolietDirectoryRecord, isoData: Buffer) {\n    super(record, isoData);\n  }\n  protected _constructDirectoryRecord(data: Buffer): JolietDirectoryRecord {\n    return new JolietDirectoryRecord(data, this._record.getRockRidgeOffset());\n  }\n}\n\n/**\n * Options for IsoFS file system instances.\n */\nexport interface IsoFSOptions {\n  // The ISO file in a buffer.\n  data: Buffer;\n  // The name of the ISO (optional; used for debug messages / identification via getName()).\n  name?: string;\n}\n\n/**\n * Mounts an ISO file as a read-only file system.\n *\n * Supports:\n * * Vanilla ISO9660 ISOs\n * * Microsoft Joliet and Rock Ridge extensions to the ISO9660 standard\n */\nexport default class IsoFS extends SynchronousFileSystem implements FileSystem {\n  public static readonly Name = \"IsoFS\";\n\n  public static readonly Options: FileSystemOptions = {\n    data: {\n      type: \"object\",\n      description: \"The ISO file in a buffer\",\n      validator: bufferValidator\n    }\n  };\n\n  /**\n   * Creates an IsoFS instance with the given options.\n   */\n  public static Create(opts: IsoFSOptions, cb: BFSCallback<IsoFS>): void {\n    let fs: IsoFS | undefined;\n    let e: ApiError | undefined;\n    try {\n      fs = new IsoFS(opts.data, opts.name, false);\n    } catch (e) {\n      e = e;\n    } finally {\n      cb(e, fs);\n    }\n  }\n  public static isAvailable(): boolean {\n    return true;\n  }\n\n  private _data: Buffer;\n  private _pvd: PrimaryOrSupplementaryVolumeDescriptor;\n  private _root: DirectoryRecord;\n  private _name: string;\n\n  /**\n   * **Deprecated. Please use IsoFS.Create() method instead.**\n   *\n   * Constructs a read-only file system from the given ISO.\n   * @param data The ISO file in a buffer.\n   * @param name The name of the ISO (optional; used for debug messages / identification via getName()).\n   */\n  constructor(data: Buffer, name: string = \"\", deprecateMsg = true) {\n    super();\n    this._data = data;\n    deprecationMessage(deprecateMsg, IsoFS.Name, {data: \"ISO data as a Buffer\", name: name});\n    // Skip first 16 sectors.\n    let vdTerminatorFound = false;\n    let i = 16 * 2048;\n    const candidateVDs = new Array<PrimaryOrSupplementaryVolumeDescriptor>();\n    while (!vdTerminatorFound) {\n      const slice = data.slice(i);\n      const vd = new VolumeDescriptor(slice);\n      switch (vd.type()) {\n        case VolumeDescriptorTypeCode.PrimaryVolumeDescriptor:\n          candidateVDs.push(new PrimaryVolumeDescriptor(slice));\n          break;\n        case VolumeDescriptorTypeCode.SupplementaryVolumeDescriptor:\n          candidateVDs.push(new SupplementaryVolumeDescriptor(slice));\n          break;\n        case VolumeDescriptorTypeCode.VolumeDescriptorSetTerminator:\n          vdTerminatorFound = true;\n          break;\n      }\n      i += 2048;\n    }\n    if (candidateVDs.length === 0) {\n      throw new ApiError(ErrorCode.EIO, `Unable to find a suitable volume descriptor.`);\n    }\n    candidateVDs.forEach((v) => {\n      // Take an SVD over a PVD.\n      if (!this._pvd || this._pvd.type() !== VolumeDescriptorTypeCode.SupplementaryVolumeDescriptor) {\n        this._pvd = v;\n      }\n    });\n    this._root = this._pvd.rootDirectoryEntry(data);\n    this._name = name;\n  }\n\n  public getName(): string {\n    let name = `IsoFS${this._name}${this._pvd ? `-${this._pvd.name()}` : ''}`;\n    if (this._root && this._root.hasRockRidge()) {\n      name += `-RockRidge`;\n    }\n    return name;\n  }\n\n  public diskSpace(path: string, cb: (total: number, free: number) => void): void {\n    // Read-only file system.\n    cb(this._data.length, 0);\n  }\n\n  public isReadOnly(): boolean {\n    return true;\n  }\n\n  public supportsLinks(): boolean {\n    return false;\n  }\n\n  public supportsProps(): boolean {\n    return false;\n  }\n\n  public supportsSynch(): boolean {\n    return true;\n  }\n\n  public statSync(p: string, isLstat: boolean): Stats {\n    const record = this._getDirectoryRecord(p);\n    if (record === null) {\n      throw ApiError.ENOENT(p);\n    }\n    return this._getStats(p, record)!;\n  }\n\n  public openSync(p: string, flags: FileFlag, mode: number): File {\n    // INVARIANT: Cannot write to RO file systems.\n    if (flags.isWriteable()) {\n      throw new ApiError(ErrorCode.EPERM, p);\n    }\n    // Check if the path exists, and is a file.\n    const record = this._getDirectoryRecord(p);\n    if (!record) {\n      throw ApiError.ENOENT(p);\n    } else if (record.isSymlink(this._data)) {\n      return this.openSync(path.resolve(p, record.getSymlinkPath(this._data)), flags, mode);\n    } else if (!record.isDirectory(this._data)) {\n      const data = record.getFile(this._data);\n      const stats = this._getStats(p, record)!;\n      switch (flags.pathExistsAction()) {\n        case ActionType.THROW_EXCEPTION:\n        case ActionType.TRUNCATE_FILE:\n          throw ApiError.EEXIST(p);\n        case ActionType.NOP:\n          return new NoSyncFile(this, p, flags, stats, data);\n        default:\n          throw new ApiError(ErrorCode.EINVAL, 'Invalid FileMode object.');\n      }\n    } else {\n      throw ApiError.EISDIR(p);\n    }\n  }\n\n  public readdirSync(path: string): string[] {\n    // Check if it exists.\n    const record = this._getDirectoryRecord(path);\n    if (!record) {\n      throw ApiError.ENOENT(path);\n    } else if (record.isDirectory(this._data)) {\n      return record.getDirectory(this._data).getFileList().slice(0);\n    } else {\n      throw ApiError.ENOTDIR(path);\n    }\n  }\n\n  /**\n   * Specially-optimized readfile.\n   */\n  public readFileSync(fname: string, encoding: string, flag: FileFlag): any {\n    // Get file.\n    const fd = this.openSync(fname, flag, 0x1a4);\n    try {\n      const fdCast = <NoSyncFile<IsoFS>> fd;\n      const fdBuff = <Buffer> fdCast.getBuffer();\n      if (encoding === null) {\n        return copyingSlice(fdBuff);\n      }\n      return fdBuff.toString(encoding);\n    } finally {\n      fd.closeSync();\n    }\n  }\n\n  private _getDirectoryRecord(path: string): DirectoryRecord | null {\n    // Special case.\n    if (path === '/') {\n      return this._root;\n    }\n    const components = path.split('/').slice(1);\n    let dir = this._root;\n    for (const component of components) {\n      if (dir.isDirectory(this._data)) {\n        dir = dir.getDirectory(this._data).getRecord(component);\n        if (!dir) {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    }\n    return dir;\n  }\n\n  private _getStats(p: string, record: DirectoryRecord): Stats | null {\n    if (record.isSymlink(this._data)) {\n      const newP = path.resolve(p, record.getSymlinkPath(this._data));\n      const dirRec = this._getDirectoryRecord(newP);\n      if (!dirRec) {\n        return null;\n      }\n      return this._getStats(newP, dirRec);\n    } else {\n      const len = record.dataLength();\n      let mode = 0x16D;\n      const date = record.recordingDate();\n      let atime = date;\n      let mtime = date;\n      let ctime = date;\n      if (record.hasRockRidge()) {\n        const entries = record.getSUEntries(this._data);\n        for (const entry of entries) {\n          if (entry instanceof PXEntry) {\n            mode = entry.mode();\n          } else if (entry instanceof TFEntry) {\n            const flags = entry.flags();\n            if (flags & TFFlags.ACCESS) {\n              atime = entry.access()!;\n            }\n            if (flags & TFFlags.MODIFY) {\n              mtime = entry.modify()!;\n            }\n            if (flags & TFFlags.CREATION) {\n              ctime = entry.creation()!;\n            }\n          }\n        }\n      }\n      // Mask out writeable flags. This is a RO file system.\n      mode = mode & 0x16D;\n      return new Stats(record.isDirectory(this._data) ? FileType.DIRECTORY : FileType.FILE, len, mode, atime, mtime, ctime);\n    }\n  }\n}\n"]}