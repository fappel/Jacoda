#! /usr/bin/env node
exports.__esModule = true;
var fs = require("fs");
var path = require("path");
var archiver = require("archiver");
var baseFolder = ".";
var srcFolder = baseFolder + "/test/fixtures/files";
var outputFolder = baseFolder + "/test/fixtures/zipfs";
// Create a zip file of the fixture data using the given zlib compression level.
function createZip(level) {
    var output = fs.createWriteStream(outputFolder + "/zipfs_fixtures_l" + level + ".zip");
    var options = { zlib: { level: level } };
    var archive = archiver('zip', options);
    archive.on('error', function (err) {
        throw err;
    });
    archive.pipe(output);
    addFolder(archive, srcFolder);
    archive.finalize();
}
// Recursively add folders and their files to the zip file.
function addFolder(archive, folder) {
    fs.readdirSync(folder).forEach(function (file) {
        var fullpath = path.join(folder, file);
        if (fs.statSync(fullpath).isDirectory()) {
            addFolder(archive, fullpath);
        }
        else {
            addFile(archive, fullpath);
        }
    });
}
// Add the given file to the zip file.
function addFile(archive, fileName) {
    var fileNameRelative = path.relative(baseFolder, fileName);
    archive.append(fs.createReadStream(fileName), { name: fileNameRelative });
}
// Ensure output folder exists
if (!fs.existsSync(outputFolder)) {
    fs.mkdirSync(outputFolder);
}
// Store
createZip(0);
// Middle-of-the-road compression
createZip(4);
// Maximum compression
createZip(9);
//# sourceMappingURL=make_zip_fixtures.js.map