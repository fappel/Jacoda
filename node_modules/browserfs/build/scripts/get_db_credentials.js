#! /usr/bin/env node
exports.__esModule = true;
var fs = require("fs");
var dropbox = require('dropbox');
var client = new dropbox.Client({
    key: 'c6oex2qavccb2l3',
    secret: 'cb0sxc9e09itvrn'
});
var root = 'test/fixtures/dropbox/';
var certPath = "#{root}cert.pem";
var tokenPath = "#{root}token.json";
if (!fs.existsSync(root)) {
    fs.mkdir(root);
}
var cert = fs.readFileSync(certPath);
client.authDriver(new dropbox.AuthDriver.NodeServer({ tls: cert }));
// Check if there are some credentials already stored
var token = null;
if (fs.existsSync(tokenPath)) {
    var tokenData = fs.readFileSync(tokenPath, 'utf8');
    try {
        token = JSON.parse(tokenData);
    }
    catch (e) {
        // Do nothing.
    }
}
// Use them to authenticate if there are
if (token) {
    client.setCredentials(token);
}
function fail() {
    console.error('Failed to authenticate');
    process.exit(1);
}
// Authenticate the client using the credentials
// If credentials do not exist OR if existing credentials are not valid,
// this method will pop up a browser window with the Dropbox login prompt.
client.authenticate(function (error, authed_client) {
    if (error) {
        fail();
    }
    else {
        if (client.isAuthenticated()) {
            // Save the credentials for future use
            fs.writeFileSync(tokenPath, JSON.stringify(authed_client.credentials()));
            console.log('Done');
            process.exit(0);
        }
        else {
            fail();
        }
    }
});
//# sourceMappingURL=get_db_credentials.js.map