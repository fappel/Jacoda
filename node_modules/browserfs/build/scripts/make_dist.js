#!/usr/bin/env node
exports.__esModule = true;
var fs = require("fs");
var path = require("path");
var rimraf = require("rimraf");
var buildFolder = path.resolve('build');
var distFolder = path.resolve('dist');
if (!fs.existsSync(buildFolder)) {
    console.error("Cannot find build folder! Make sure you run this script from the root folder.");
    process.exit(1);
}
function copyToDist(file) {
    var dest = path.join(distFolder, file);
    var parent = path.dirname(dest);
    while (!fs.existsSync(parent)) {
        fs.mkdirSync(parent);
        parent = path.dirname(parent);
    }
    fs.writeFileSync(dest, fs.readFileSync(path.join(buildFolder, file)));
}
rimraf(distFolder, function (err) {
    if (err) {
        console.error(err);
        process.exit(1);
    }
    fs.mkdirSync(distFolder);
    // TypeScript interface
    fs.writeFileSync(path.join(distFolder, 'browserfs.d.ts'), "export * from './node/index';\nexport as namespace BrowserFS;\n");
    // Scripts & library files
    [path.join('scripts', 'make_xhrfs_index'), 'browserfs', 'browserfs.min'].forEach(function (file) {
        ['.js', '.js.map'].forEach(function (ext) {
            copyToDist("" + file + ext);
        });
    });
    // Shims
    var shimFolder = path.join(distFolder, 'shims');
    if (!fs.existsSync(shimFolder)) {
        fs.mkdirSync(shimFolder);
    }
    ['fs', 'path', 'process', 'buffer'].forEach(function (mod) {
        fs.writeFileSync(path.join(shimFolder, mod + ".js"), "module.exports = BrowserFS.BFSRequire('" + mod + "');\n");
    });
    fs.writeFileSync(path.join(shimFolder, 'bufferGlobal.js'), "module.exports = BrowserFS.BFSRequire('buffer').Buffer;\n");
});
//# sourceMappingURL=make_dist.js.map