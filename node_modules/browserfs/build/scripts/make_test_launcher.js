#!/usr/bin/env node
exports.__esModule = true;
var fs = require("fs");
var path = require("path");
function generateRunFile() {
    var tests = '', importsStringified, testImports = [];
    function processDir(dir) {
        fs.readdirSync(dir).forEach(function (file) {
            var filePath = path.resolve(dir, file), relPath = path.relative(path.resolve('test/harness'), filePath);
            if (fs.statSync(filePath).isFile()) {
                var name_1 = path.basename(relPath).replace(/-/g, '_');
                name_1 = name_1.slice(0, name_1.length - 3);
                switch (path.extname(file)) {
                    case '.ts':
                        var modPath = relPath.slice(0, relPath.length - 3).replace(/\\/g, '/');
                        testImports.push("import " + name_1 + " from '" + modPath + "';");
                        tests += "'" + file + "': " + name_1 + ",";
                        break;
                    case '.js':
                        var jsModPath = relPath.slice(0, relPath.length - 3).replace(/\\/g, '/');
                        testImports.push("const " + name_1 + "Emscripten = require('" + jsModPath + "');");
                        tests += "'" + file + "': " + name_1 + "Emscripten,";
                        break;
                    default:
                        break;
                }
            }
            else {
                tests += '\'' + file + '\':{';
                processDir(filePath);
                tests += '},';
            }
        });
        // Remove trailing ','.
        tests = tests.slice(0, tests.length - 1);
    }
    processDir('test/tests');
    var factoryList = [];
    importsStringified = fs.readdirSync('test/harness/factories')
        .filter(function (file) {
        return file.slice(file.length - 11) === '_factory.ts';
    })
        .map(function (file) {
        var name = file.slice(0, file.length - 11);
        factoryList.push(name);
        return "import " + name + " from './factories/" + file.slice(0, file.length - 3) + "';";
    }).concat(testImports).join('\n');
    fs.writeFileSync('test/harness/run.ts', fs.readFileSync('test/harness/run.tstemplate')
        .toString()
        .replace(/\/\*IMPORTS\*\//g, importsStringified)
        .replace(/\/\*FACTORIES\*\//g, factoryList.join(', '))
        .replace(/\/\*TESTS\*\//g, tests), 'utf8');
}
generateRunFile();
//# sourceMappingURL=make_test_launcher.js.map